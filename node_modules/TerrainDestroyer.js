var Composition = require("Composition");
var Vec2 = require("vec2");

module.exports = function(){
	var TerrainDestroyer = new Composition();

	TerrainDestroyer.draw = function(){
		var terrain = engine.find("terrain");

		var collision = function(a,b){
			return !(a.renderer.vertices.bottomRight.x + a.transform.position.x < b.renderer.vertices.topLeft.x + b.transform.position.x
					|| b.renderer.vertices.bottomRight.x + b.transform.position.x < a.renderer.vertices.topLeft.x + a.transform.position.x
					|| a.renderer.vertices.bottomRight.y + a.transform.position.y < b.renderer.vertices.topLeft.y + b.transform.position.y
					|| b.renderer.vertices.bottomRight.y + b.transform.position.y < a.renderer.vertices.topLeft.y + a.transform.position.y);
		}

		if(collision(this.base, terrain.components)){
			var x = Math.floor(this.base.transform.position.x + this.base.renderer.vertices.topLeft.x);
			var y = Math.floor(this.base.transform.position.y + this.base.renderer.vertices.topLeft.y);
			var w = this.base.renderer.vertices.bottomRight.x - this.base.renderer.vertices.topLeft.x;
			var h = this.base.renderer.vertices.bottomRight.y - this.base.renderer.vertices.topLeft.y;

			var imgDataSquare = this.base.renderer.canvas.context.getImageData(x, y, w, h);
			var imgData = terrain.components.renderer.canvas.context.getImageData(x, y, w, h);

			for(var i = 0; i < w; i++){
				for(var j = 0; j < h; j++){
					if(imgData.data[i*4+3 + j*w*4] == 0 || imgDataSquare.data[i*4+3 + j*w*4] == 0){
						continue;
					}else{
						imgData.data[i*4+3 + j*w*4] = 0;
						//Prevents life from being negative
						if(this.base.life.percentage - 0.0003 > 0){
							this.base.life.percentage -= 0.0003;
						}else{
							this.base.life.percentage = 0;
						}
					}
				}
			}
			terrain.components.renderer.canvas.context.putImageData(imgData, x, y);

			//Implements the same thing using canvas composite operations
			//Slightly faster but unfortunately can't decrease life.
			// var ctx = terrain.components.renderer.canvas.context;
			// ctx.globalCompositeOperation = "destination-out";

			// ctx.beginPath();
			// ctx.moveTo(this.base.renderer.vertices.vertices[0].x +
			// 		   this.base.transform.position.x,
			// 		   this.base.renderer.vertices.vertices[0].y +
			// 		   this.base.transform.position.y);

			// //Make a line to the next vertex
			// for(var vertex = 1; vertex < this.base.renderer.vertices.vertices.length; vertex++){
			// 	ctx.lineTo(this.base.renderer.vertices.vertices[vertex].x +
			// 			   this.base.transform.position.x,
			// 			   this.base.renderer.vertices.vertices[vertex].y +
			// 			   this.base.transform.position.y);
			// }

			// ctx.closePath();
			// ctx.fill();

			// ctx.globalCompositeOperation = "source-over";
		}


	}
	return TerrainDestroyer;
}
