var Composition = require('Composition');
var Transform = require('Transform');
var ImageRenderer = require('ImageRenderer');
var Rigidbody = require('Rigidbody');
var characterCollider = require('CharacterCollider');
var CharacterController = require('CharacterController');
var gravity = require('Gravity');
var Vec2 = require('vec2');
var LifeComponent = require("LifeComponent");
var LifeBar = require('LifeBar');
var StepBar = require('StepBar');
var SpellBall = require('SpellBall');

module.exports = function(x, y, path){

	var player = new Composition(
		'transform', Transform(x,y),
		'controller', CharacterController(),
		'rigidbody', Rigidbody(),
		'collider', characterCollider(),
		'renderer', ImageRenderer(path, 2),
		'gravity', gravity(100),
		'life', LifeComponent(),
		'steps', LifeComponent(),
		'LifeBar', LifeBar(),
		'StepBar', StepBar()
	);

	player.setActive = function(value){
		this.components.rigidbody.speed = new Vec2(0,0);
		this.components.controller.active = value;
		this.isActive = value;
	}

	player.endTurn = function(){
		this.components.steps.percentage = 1;
		this.base.turnManager.nextTurn();

	}

	player.castSpell = function(initVel){
		this.add('spell', SpellBall(this, initVel));
		this.components.spell.components.transform.localPosition = this.components.transform.position.clone();
		this.components.spell.components.transform.localPosition.x += 30;
	}

	player.keyup = function(keycode){
		if(keycode == 32){
			if(this.isActive){
				this.castSpell(new Vec2(100,-100));
				shouldEndTurn = true;
			}
		}
	}



	var shouldEndTurn = false;

	player.update = function(){
		if(shouldEndTurn || this.components.steps.percentage == 0){
			this.endTurn();
			shouldEndTurn = false;
		}
	}

	return player;
}
